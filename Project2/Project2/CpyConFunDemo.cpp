/************************************************************************/
/*    Teacher类：                                                       */
/*        自定义拷贝构造函数		                                    */
/*    数据成员：                                                        */
/*        名字                                                          */
/*        年龄                                                          */
/*    成员函数：                                                        */
/*        数据成员的封装函数				                            */
/************************************************************************/
#include <iostream>
#include <stdlib.h>
#include <string>
#include "CpyConFunDemo.h"
using namespace std;

//在这里定义一个调用函数用于测试
void test(Teacher t)
{
	cout << "以上为调用测试函数的结果" << endl;
}


int main(void)
{
	Teacher t1;
	//利用t1实例化t2和t3,他们会调用拷贝构造函数
	Teacher t2 = t1;
	Teacher t3(t1);
	//调用测试函数，看测试函数调用的是哪一个构造函数，默认or拷贝
	cout << "****************分隔符****************" << endl;
	test(t1);

	system("pause");
	return 0;
}
/************************************************************************/
/*     毫无疑问，t1在定义时用的是默认构造函数，而在调用test函数时触发了 */
/* 调用拷贝构造函数的过程，从而有了这样的结果：							*/
/*																		*/
/*		Teacher(string name, int age)									*/
/*		Teacher(const Teacher &tea)										*/
/*		Teacher(const Teacher &tea)										*/
/*		****************分隔符****************							*/
/*		Teacher(const Teacher &tea)										*/
/*		以上为调用测试函数的结果										*/
/************************************************************************/