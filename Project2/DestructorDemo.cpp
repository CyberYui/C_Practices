/************************************************************************/
/*   Teacher类：                                                        */
/*       1.自定义析构函数                                               */
/*       2.普通方式实例化的对象，在销毁对象时是否自动调用析构函数       */
/*       3.通过拷贝构造函数实例化对象，在销毁对象时是否自动调用析构函数 */
/*   数据成员：                                                         */
/*       名字                                                           */
/*       年龄                                                           */
/*   成员函数：                                                         */
/*       数据成员的封装函数                                             */
/************************************************************************/
#include <istream>
#include <stdlib.h>
#include <string>
#include "DestructorDemo.h"
using namespace std;

int main(void)
{
	//从栈上实例化对象
	Teacher t1;
	//此时运行的话,在system("pause");之后会出现析构函数的调用内容

	//从堆中实例化对象，并销毁它
	cout << "*************分隔符*************" << endl;
	Teacher *p = new Teacher();
	delete p;//销毁指针，释放内存
	p = NULL;

	//接下来看拷贝构造函数实例化的对象是否也会调用析构函数
	cout << "*************分隔符*************" << endl;
	Teacher t2 = t1;

	system("pause");
	return 0;
}

/*****************************CMD.exe***********************************/
/*	Teacher(string name, int age)	  //栈实例化对象调用默认构造函数
/*	*************分隔符*************							
/*	Teacher(string name, int age)	  //堆实例化对象调用默认构造函数
/*	~Teacher()						  //堆实例化对象调用析构函数
/*	*************分隔符*************							
/*	Teacher(const Teacher &tea)		  //拷贝构造函数实例化的对象调用拷贝构造函数
/*	请按任意键继续. . .				  //system("pause");执行结果
/*	~Teacher()						  //栈实例化对象调用析构函数
/*	~Teacher()						  //堆实例化对象调用析构函数
/************************************************************************/